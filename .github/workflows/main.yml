name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10"]
    steps:
      - uses: actions/checkout@v2

      - uses: pdm-project/setup-pdm@main
        name: Setup PDM
        with:
          python-version: ${{ matrix.python-version }}
          enable-pep582: false

      - name: Install Dependencies
        run: pdm install -G test

      - name: Run Tests
        run: pdm run pytest tests --cov grappler --cov-report=html --cov-report=term

      - uses: actions/upload-artifact@v3
        with:
          name: coverage report
          path: htmlcov

  checks:
    name: Style Checks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: pre-commit/action@v2.0.3

  typechecks:
    name: Type Checks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: pdm-project/setup-pdm@main
        name: Setup PDM
      - name: Install Dependencies
        run: pdm install -G dev
      - name: Run Type Check (mypy)
        run: pdm run mypy grappler

  deploy-docs:
    name: Deploy docs
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: pdm-project/setup-pdm@main
        name: Setup PDM
        with:
          python-version: "3.10"
          enable-pep582: false

      - name: Install Dependencies
        run: pdm install
      - run: pdm run mkdocs gh-deploy --force
    if: github.ref == 'refs/heads/main'

  deploy-pypi:
    name: Deploy PyPI
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')

    steps:
      - uses: actions/checkout@v2

      - uses: pdm-project/setup-pdm@main
        name: Setup PDM
        with:
          python-version: "3.8"
          enable-pep582: false

      - name: Build Source and Wheels
        run: pdm build

      - name: Upload PyPI
        run: |
          pip install twine
          twine upload --skip-existing -u __token__ -p ${{ secrets.PYPI_API_TOKEN }} dist/*
